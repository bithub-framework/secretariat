{
  "openapi": "3.0.1",
  "info": {
    "title": "Secretariat",
    "version": "0.0.1"
  },
  "paths": {
    "/{pid}/{key}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pid"
        },
        {
          "$ref": "#/components/parameters/key"
        }
      ],
      "post": {
        "summary": "Submit a value",
        "operationId": "submit",
        "parameters": [
          {
            "in": "header",
            "name": "Time",
            "description": "The time when the value is generated",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UnixTime"
            }
          }
        ],
        "requestBody": {
          "description": "A JSON value",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonValue"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "Remove all values",
        "operationId": "remove",
        "responses": {
          "204": {
            "description": "Successful"
          }
        }
      },
      "get": {
        "summary": "Get all values",
        "operationId": "getEquities",
        "parameters": [
          {
            "in": "query",
            "name": "before",
            "description": "A Unix Time, values before which are specified",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/UnixTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValueAndTime"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{pid}/{key}/latest": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pid"
        },
        {
          "$ref": "#/components/parameters/key"
        }
      ],
      "get": {
        "summary": "Get the latest value",
        "operationId": "getLatest",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueAndTime"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UnixTime": {
        "type": "integer",
        "format": "int64"
      },
      "JsonValue": {
        "nullable": true,
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "number"
          },
          {
            "type": "integer"
          },
          {
            "type": "boolean"
          },
          {
            "type": "array",
            "items": {}
          },
          {
            "type": "object"
          }
        ]
      },
      "ValueAndTime": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/JsonValue"
          },
          "time": {
            "$ref": "#/components/schemas/UnixTime"
          }
        }
      }
    },
    "parameters": {
      "pid": {
        "in": "path",
        "name": "pid",
        "description": "Project ID",
        "required": true,
        "schema": {
          "type": "string",
          "format": "kebab-case",
          "minLength": 1,
          "maxLength": 32
        }
      },
      "key": {
        "in": "path",
        "name": "key",
        "description": "Name of the posted value",
        "required": true,
        "schema": {
          "type": "string",
          "format": "kebab-case",
          "minLength": 1,
          "maxLength": 16
        }
      }
    }
  }
}